import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    apply from: rootProject.file('config/versions.gradle')

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath Libs.AndroidTools.gradlePlugin
        classpath Libs.Kotlin.gradlePlugin
        classpath Libs.Kotlin.serialization

        classpath Libs.swaggerCodegen

        classpath Libs.dokka
        classpath Libs.spotless
        classpath Libs.gradleVersions
    }
}

allprojects {
    apply from: rootProject.file('config/versions.gradle')

    repositories {
        mavenLocal()
        google()
        mavenCentral()
        jcenter()
    }
}

subprojects {
    afterEvaluate {
        if(it.hasProperty('android')) {
            android {
                compileSdkVersion 30

                defaultConfig {
                    minSdkVersion 21
                    targetSdkVersion 30
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }

                sourceSets['main'].java.srcDir('src/main/kotlin')
            }
        }
    }

    tasks.withType(KotlinCompile).all {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
    }

    tasks.withType(org.jetbrains.dokka.gradle.DokkaTask).configureEach {
        dokkaSourceSets.configureEach {
            reportUndocumented.set(true)
            skipEmptyPackages.set(true)
            skipDeprecated.set(true)
            jdkVersion.set(8)

            // Add Android SDK packages
            noAndroidSdkLink.set(false)

            // AndroidX docs
            externalDocumentationLink {
                url.set(new URL("https://developer.android.com/reference/"))
                packageListUrl.set(new URL("https://developer.android.com/reference/androidx/package-list"))
            }
        }
    }

    // Exclude 'content' module as it contains generated code
    if (it.name != 'content') {
        apply from: "$rootDir/config/spotless.gradle"
    }
}

apply from: "$rootDir/config/dependencyUpdates.gradle"
